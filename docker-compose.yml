version: '3.8'

services:
  app:
    build:
      context: .
      args:
        NODE_ENV: ${NODE_ENV}
        DATABASE_HOST: ${DATABASE_HOST}
        DATABASE_PORT: ${DATABASE_PORT}
        DATABASE_USER: ${DATABASE_USER}
        DATABASE_PASSWORD: ${DATABASE_PASSWORD}
        DATABASE_NAME: ${DATABASE_NAME}
        JWT_SECRET: ${JWT_SECRET}
        JWT_SECRET_REFRESH: ${JWT_SECRET_REFRESH}
        GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID}
        GOOGLE_CLIENT_SECRET: ${GOOGLE_CLIENT_SECRET}
        GOOGLE_CALLBACK_URL: ${GOOGLE_CALLBACK_URL}
        REDIS_LOCAL_URL: ${REDIS_LOCAL_URL}
        REDIS_PROD_URL: ${REDIS_PROD_URL}
        NEXT_PROD_URL: ${NEXT_PROD_URL}
        LOCAL_PROD_URL: ${LOCAL_PROD_URL}
        COOKIE_DOMAIN: ${COOKIE_DOMAIN}
        
    ports:
      - '${APP_PORT}:8080'
    environment:
      - NODE_ENV=${NODE_ENV}
      - DATABASE_HOST=${DATABASE_HOST}
      - DATABASE_PORT=${DATABASE_PORT}
      - DATABASE_USER=${DATABASE_USER}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD}
      - DATABASE_NAME=${DATABASE_NAME}
      - JWT_SECRET=${JWT_SECRET}
      - JWT_SECRET_REFRESH=${JWT_SECRET_REFRESH}
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
      - GOOGLE_CALLBACK_URL=${GOOGLE_CALLBACK_URL}
      - REDIS_LOCAL_URL=${REDIS_LOCAL_URL}
      - REDIS_PROD_URL=${REDIS_PROD_URL}
      - NEXT_PROD_URL=${NEXT_PROD_URL}
      - NEXT_LOCAL_URL=${NEXT_LOCAL_URL}
      - COOKIE_DOMAIN={COOKIE_DOMAIN}
      
    networks:
      - my-network
    volumes:
      - ./src:/app/src
      - /var/run/docker.sock:/var/run/docker.sock

  db:
    image: postgres:17-alpine
    environment:
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: ${DATABASE_NAME}
    ports:
      - '5432:5432'
    networks:
      - my-network
    volumes:
      - postgres-data:/var/lib/postgresql/data

  redis:
    image: redis:alpine
    ports:
      - '6379:6379'
    networks:
      - my-network
    volumes:
      - redis-data:/data

  telegram-bot:
    build:
      context: ./telegram-bot
    ports:
      - '8082:8082'
    networks:
      - my-network
    environment:
      - NODE_ENV=${NODE_ENV}
      - REDIS_PROD_URL=${REDIS_PROD_URL}
      - BOT_TOKEN=${BOT_TOKEN}
      - BOT_TOKEN_TEST=${BOT_TOKEN_TEST}
    depends_on:
      - redis

networks:
  my-network:
    name: my-network
    driver: bridge

volumes:
  postgres-data:
  redis-data:
